{
  "src/test/resources/solidity/end_to_end_testing_quick/metacoin_flattened.sol:ConvertLib": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.lang.IllegalStateException: expected JUMPDEST instruction after marked linear code\n\tat ch.securify.decompiler.DestackerFallback.lambda$getInstructions$26(DestackerFallback.java:606)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat ch.securify.decompiler.DestackerFallback.getInstructions(DestackerFallback.java:508)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:172)\n\tat ch.securify.Main.decompileContract(Main.java:276)\n\tat ch.securify.Main.processHexFile(Main.java:157)\n\tat ch.securify.Main.processCompilationOutput(Main.java:120)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/metacoin_flattened.sol:MetaCoin": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.lang.IllegalStateException: expected JUMPDEST instruction after marked linear code\n\tat ch.securify.decompiler.DestackerFallback.lambda$getInstructions$26(DestackerFallback.java:606)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat ch.securify.decompiler.DestackerFallback.getInstructions(DestackerFallback.java:508)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:172)\n\tat ch.securify.Main.decompileContract(Main.java:276)\n\tat ch.securify.Main.processHexFile(Main.java:157)\n\tat ch.securify.Main.processCompilationOutput(Main.java:120)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  }
}