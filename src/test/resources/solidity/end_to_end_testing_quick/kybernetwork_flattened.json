{
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:ERC20": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          -1
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:72)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:131)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:159)\n\tat ch.securify.Main.processCompilationOutput(Main.java:128)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:ExpectedRateInterface": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          -1
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:72)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:131)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:159)\n\tat ch.securify.Main.processCompilationOutput(Main.java:128)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:FeeBurnerInterface": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          -1
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:72)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:131)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:159)\n\tat ch.securify.Main.processCompilationOutput(Main.java:128)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:KyberNetwork": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.lang.IllegalStateException: expected JUMPDEST instruction after marked linear code\n\tat ch.securify.decompiler.DestackerFallback.lambda$getInstructions$26(DestackerFallback.java:606)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat ch.securify.decompiler.DestackerFallback.getInstructions(DestackerFallback.java:508)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:172)\n\tat ch.securify.Main.decompileContract(Main.java:276)\n\tat ch.securify.Main.processHexFile(Main.java:157)\n\tat ch.securify.Main.processCompilationOutput(Main.java:120)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:KyberNetworkInterface": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          -1
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:72)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:131)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:159)\n\tat ch.securify.Main.processCompilationOutput(Main.java:128)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:KyberReserveInterface": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          -1
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:72)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:131)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:159)\n\tat ch.securify.Main.processCompilationOutput(Main.java:128)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:PermissionGroups": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.lang.IllegalStateException: expected JUMPDEST instruction after marked linear code\n\tat ch.securify.decompiler.DestackerFallback.lambda$getInstructions$26(DestackerFallback.java:606)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat ch.securify.decompiler.DestackerFallback.getInstructions(DestackerFallback.java:508)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:172)\n\tat ch.securify.Main.decompileContract(Main.java:276)\n\tat ch.securify.Main.processHexFile(Main.java:157)\n\tat ch.securify.Main.processCompilationOutput(Main.java:120)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:Utils": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          239
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": []
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:Utils2": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.lang.IllegalStateException: expected JUMPDEST instruction after marked linear code\n\tat ch.securify.decompiler.DestackerFallback.lambda$getInstructions$26(DestackerFallback.java:606)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat ch.securify.decompiler.DestackerFallback.getInstructions(DestackerFallback.java:508)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:172)\n\tat ch.securify.Main.decompileContract(Main.java:276)\n\tat ch.securify.Main.processHexFile(Main.java:157)\n\tat ch.securify.Main.processCompilationOutput(Main.java:120)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:WhiteListInterface": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [
          -1
        ],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:72)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:131)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:159)\n\tat ch.securify.Main.processCompilationOutput(Main.java:128)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/kybernetwork_flattened.sol:Withdrawable": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.lang.IllegalStateException: expected JUMPDEST instruction after marked linear code\n\tat ch.securify.decompiler.DestackerFallback.lambda$getInstructions$26(DestackerFallback.java:606)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat ch.securify.decompiler.DestackerFallback.getInstructions(DestackerFallback.java:508)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:172)\n\tat ch.securify.Main.decompileContract(Main.java:276)\n\tat ch.securify.Main.processHexFile(Main.java:157)\n\tat ch.securify.Main.processCompilationOutput(Main.java:120)\n\tat ch.securify.Main.processSolidityFile(Main.java:94)\n\tat ch.securify.Main.main(Main.java:227)\n"
        }
      ]
    }
  }
}