{
  "src/test/resources/solidity/end_to_end_testing_quick/pax_flattened.sol:PAXImplementation": {
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": [
          66
        ]
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [
          158,
          159,
          160,
          161,
          162
        ],
        "warnings": [
          195,
          196,
          232,
          233,
          234,
          250,
          366,
          405,
          406,
          419,
          420
        ],
        "safe": [],
        "conflicts": [
          289,
          307,
          316,
          329,
          343,
          353,
          365,
          391
        ]
      }
    },
    "securifyErrors": {
      "errors": []
    }
  },
  "src/test/resources/solidity/end_to_end_testing_quick/pax_flattened.sol:SafeMath": {
    "results": {},
    "securifyErrors": {
      "errors": [
        {
          "error": "decompilation_error",
          "stackTrace": "java.util.EmptyStackException\n\tat java.util.Stack.peek(Stack.java:102)\n\tat java.util.Stack.pop(Stack.java:84)\n\tat ch.securify.decompiler.Variable.takeFromStack(Variable.java:83)\n\tat ch.securify.decompiler.InstructionFactory.createAndApply(InstructionFactory.java:92)\n\tat ch.securify.decompiler.DecompilerFallback.decompile(DecompilerFallback.java:111)\n\tat ch.securify.Main.decompileContract(Main.java:288)\n\tat ch.securify.Main.processHexFile(Main.java:161)\n\tat ch.securify.Main.processCompilationOutput(Main.java:124)\n\tat ch.securify.Main.processSolidityFile(Main.java:98)\n\tat ch.securify.Main.main(Main.java:231)\n"
        }
      ]
    }
  }
}